//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("QbDynamicQueryModel", "FK_DynamicQueryAssociation_DynamicQueryTable", "DynamicQueryTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryTable), "DynamicQueryAssociation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryAssociation), true)]
[assembly: EdmRelationshipAttribute("QbDynamicQueryModel", "FK_DynamicQueryCalculatedColumnTable_DynamicQueryTable", "DynamicQueryTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryTable), "DynamicQueryCalculatedColumnTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryCalculatedColumnTable), true)]
[assembly: EdmRelationshipAttribute("QbDynamicQueryModel", "FK_DynamicQueryColumn_DynamicQueryQuery", "DynamicQueryQuery", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryQuery), "DynamicQueryColumn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryColumn), true)]
[assembly: EdmRelationshipAttribute("QbDynamicQueryModel", "FK_DynamicQueryColumn_DynamicQueryTable", "DynamicQueryTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryTable), "DynamicQueryColumn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryColumn), true)]
[assembly: EdmRelationshipAttribute("QbDynamicQueryModel", "FK_DynamicQueryTableSubType_DynamicQueryTableType", "DynamicQueryTableType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryTableType), "DynamicQueryTableSubType", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryTableSubType), true)]
[assembly: EdmRelationshipAttribute("QbDynamicQueryModel", "FK_DynamicQueryCalculatedColumn_DynamicQueryTable", "DynamicQueryTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryTable), "DynamicQueryCalculatedColumn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryCalculatedColumn), true)]
[assembly: EdmRelationshipAttribute("QbDynamicQueryModel", "FK_DynamicQueryCalculatedColumn_DynamicQueryTableSubType", "DynamicQueryTableSubType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryTableSubType), "DynamicQueryCalculatedColumn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryCalculatedColumn), true)]
[assembly: EdmRelationshipAttribute("QbDynamicQueryModel", "FK_DynamicQueryCalculatedColumn_DynamicQueryTableType", "DynamicQueryTableType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryTableType), "DynamicQueryCalculatedColumn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryCalculatedColumn), true)]
[assembly: EdmRelationshipAttribute("QbDynamicQueryModel", "FK_DynamicQueryCalculatedColumnTable_DynamicQueryCalculatedColumn", "DynamicQueryCalculatedColumn", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryCalculatedColumn), "DynamicQueryCalculatedColumnTable", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryCalculatedColumnTable), true)]
[assembly: EdmRelationshipAttribute("QbDynamicQueryModel", "FK_DynamicQueryColumn_DynamicQueryTableColumn", "DynamicQueryTableColumn", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryTableColumn), "DynamicQueryColumn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryColumn), true)]
[assembly: EdmRelationshipAttribute("QbDynamicQueryModel", "FK_DynamicQueryTableColumn_DynamicQueryTable", "DynamicQueryTable", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryTable), "DynamicQueryTableColumn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryTableColumn), true)]
[assembly: EdmRelationshipAttribute("QbDynamicQueryModel", "FK_DynamicQueryTableColumn_DynamicQueryTableSubType", "DynamicQueryTableSubType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryTableSubType), "DynamicQueryTableColumn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryTableColumn), true)]
[assembly: EdmRelationshipAttribute("QbDynamicQueryModel", "FK_DynamicQueryTableColumn_DynamicQueryTableType", "DynamicQueryTableType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryTableType), "DynamicQueryTableColumn", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DynaimcQuery.QueryBuilderDataAccess.DynamicQueryTableColumn), true)]

#endregion

namespace DynaimcQuery.QueryBuilderDataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class QbDynamicQueryEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new QbDynamicQueryEntities object using the connection string found in the 'QbDynamicQueryEntities' section of the application configuration file.
        /// </summary>
        public QbDynamicQueryEntities() : base("name=QbDynamicQueryEntities", "QbDynamicQueryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new QbDynamicQueryEntities object.
        /// </summary>
        public QbDynamicQueryEntities(string connectionString) : base(connectionString, "QbDynamicQueryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new QbDynamicQueryEntities object.
        /// </summary>
        public QbDynamicQueryEntities(EntityConnection connection) : base(connection, "QbDynamicQueryEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DynamicQueryAssociation> DynamicQueryAssociation
        {
            get
            {
                if ((_DynamicQueryAssociation == null))
                {
                    _DynamicQueryAssociation = base.CreateObjectSet<DynamicQueryAssociation>("DynamicQueryAssociation");
                }
                return _DynamicQueryAssociation;
            }
        }
        private ObjectSet<DynamicQueryAssociation> _DynamicQueryAssociation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DynamicQueryCalculatedColumnTable> DynamicQueryCalculatedColumnTable
        {
            get
            {
                if ((_DynamicQueryCalculatedColumnTable == null))
                {
                    _DynamicQueryCalculatedColumnTable = base.CreateObjectSet<DynamicQueryCalculatedColumnTable>("DynamicQueryCalculatedColumnTable");
                }
                return _DynamicQueryCalculatedColumnTable;
            }
        }
        private ObjectSet<DynamicQueryCalculatedColumnTable> _DynamicQueryCalculatedColumnTable;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DynamicQueryColumn> DynamicQueryColumn
        {
            get
            {
                if ((_DynamicQueryColumn == null))
                {
                    _DynamicQueryColumn = base.CreateObjectSet<DynamicQueryColumn>("DynamicQueryColumn");
                }
                return _DynamicQueryColumn;
            }
        }
        private ObjectSet<DynamicQueryColumn> _DynamicQueryColumn;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DynamicQueryQuery> DynamicQueryQuery
        {
            get
            {
                if ((_DynamicQueryQuery == null))
                {
                    _DynamicQueryQuery = base.CreateObjectSet<DynamicQueryQuery>("DynamicQueryQuery");
                }
                return _DynamicQueryQuery;
            }
        }
        private ObjectSet<DynamicQueryQuery> _DynamicQueryQuery;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DynamicQueryTable> DynamicQueryTable
        {
            get
            {
                if ((_DynamicQueryTable == null))
                {
                    _DynamicQueryTable = base.CreateObjectSet<DynamicQueryTable>("DynamicQueryTable");
                }
                return _DynamicQueryTable;
            }
        }
        private ObjectSet<DynamicQueryTable> _DynamicQueryTable;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DynamicQueryTableSubType> DynamicQueryTableSubType
        {
            get
            {
                if ((_DynamicQueryTableSubType == null))
                {
                    _DynamicQueryTableSubType = base.CreateObjectSet<DynamicQueryTableSubType>("DynamicQueryTableSubType");
                }
                return _DynamicQueryTableSubType;
            }
        }
        private ObjectSet<DynamicQueryTableSubType> _DynamicQueryTableSubType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DynamicQueryTableType> DynamicQueryTableType
        {
            get
            {
                if ((_DynamicQueryTableType == null))
                {
                    _DynamicQueryTableType = base.CreateObjectSet<DynamicQueryTableType>("DynamicQueryTableType");
                }
                return _DynamicQueryTableType;
            }
        }
        private ObjectSet<DynamicQueryTableType> _DynamicQueryTableType;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DynamicQueryCalculatedColumn> DynamicQueryCalculatedColumn
        {
            get
            {
                if ((_DynamicQueryCalculatedColumn == null))
                {
                    _DynamicQueryCalculatedColumn = base.CreateObjectSet<DynamicQueryCalculatedColumn>("DynamicQueryCalculatedColumn");
                }
                return _DynamicQueryCalculatedColumn;
            }
        }
        private ObjectSet<DynamicQueryCalculatedColumn> _DynamicQueryCalculatedColumn;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DynamicQueryTableColumn> DynamicQueryTableColumn
        {
            get
            {
                if ((_DynamicQueryTableColumn == null))
                {
                    _DynamicQueryTableColumn = base.CreateObjectSet<DynamicQueryTableColumn>("DynamicQueryTableColumn");
                }
                return _DynamicQueryTableColumn;
            }
        }
        private ObjectSet<DynamicQueryTableColumn> _DynamicQueryTableColumn;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DynamicQueryAssociation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDynamicQueryAssociation(DynamicQueryAssociation dynamicQueryAssociation)
        {
            base.AddObject("DynamicQueryAssociation", dynamicQueryAssociation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DynamicQueryCalculatedColumnTable EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDynamicQueryCalculatedColumnTable(DynamicQueryCalculatedColumnTable dynamicQueryCalculatedColumnTable)
        {
            base.AddObject("DynamicQueryCalculatedColumnTable", dynamicQueryCalculatedColumnTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DynamicQueryColumn EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDynamicQueryColumn(DynamicQueryColumn dynamicQueryColumn)
        {
            base.AddObject("DynamicQueryColumn", dynamicQueryColumn);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DynamicQueryQuery EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDynamicQueryQuery(DynamicQueryQuery dynamicQueryQuery)
        {
            base.AddObject("DynamicQueryQuery", dynamicQueryQuery);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DynamicQueryTable EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDynamicQueryTable(DynamicQueryTable dynamicQueryTable)
        {
            base.AddObject("DynamicQueryTable", dynamicQueryTable);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DynamicQueryTableSubType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDynamicQueryTableSubType(DynamicQueryTableSubType dynamicQueryTableSubType)
        {
            base.AddObject("DynamicQueryTableSubType", dynamicQueryTableSubType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DynamicQueryTableType EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDynamicQueryTableType(DynamicQueryTableType dynamicQueryTableType)
        {
            base.AddObject("DynamicQueryTableType", dynamicQueryTableType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DynamicQueryCalculatedColumn EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDynamicQueryCalculatedColumn(DynamicQueryCalculatedColumn dynamicQueryCalculatedColumn)
        {
            base.AddObject("DynamicQueryCalculatedColumn", dynamicQueryCalculatedColumn);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DynamicQueryTableColumn EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDynamicQueryTableColumn(DynamicQueryTableColumn dynamicQueryTableColumn)
        {
            base.AddObject("DynamicQueryTableColumn", dynamicQueryTableColumn);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QbDynamicQueryModel", Name="DynamicQueryAssociation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DynamicQueryAssociation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DynamicQueryAssociation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="primaryKeyTableId">Initial value of the PrimaryKeyTableId property.</param>
        /// <param name="primaryKeyTable">Initial value of the PrimaryKeyTable property.</param>
        /// <param name="primaryKeyTableColumn">Initial value of the PrimaryKeyTableColumn property.</param>
        /// <param name="foreignKeyTable">Initial value of the ForeignKeyTable property.</param>
        /// <param name="foreignKeyTableColumn">Initial value of the ForeignKeyTableColumn property.</param>
        /// <param name="lastChangeDate">Initial value of the LastChangeDate property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static DynamicQueryAssociation CreateDynamicQueryAssociation(global::System.Int32 id, global::System.Int32 primaryKeyTableId, global::System.String primaryKeyTable, global::System.String primaryKeyTableColumn, global::System.String foreignKeyTable, global::System.String foreignKeyTableColumn, global::System.DateTime lastChangeDate, global::System.Boolean active)
        {
            DynamicQueryAssociation dynamicQueryAssociation = new DynamicQueryAssociation();
            dynamicQueryAssociation.Id = id;
            dynamicQueryAssociation.PrimaryKeyTableId = primaryKeyTableId;
            dynamicQueryAssociation.PrimaryKeyTable = primaryKeyTable;
            dynamicQueryAssociation.PrimaryKeyTableColumn = primaryKeyTableColumn;
            dynamicQueryAssociation.ForeignKeyTable = foreignKeyTable;
            dynamicQueryAssociation.ForeignKeyTableColumn = foreignKeyTableColumn;
            dynamicQueryAssociation.LastChangeDate = lastChangeDate;
            dynamicQueryAssociation.Active = active;
            return dynamicQueryAssociation;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PrimaryKeyTableId
        {
            get
            {
                return _PrimaryKeyTableId;
            }
            set
            {
                OnPrimaryKeyTableIdChanging(value);
                ReportPropertyChanging("PrimaryKeyTableId");
                _PrimaryKeyTableId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PrimaryKeyTableId");
                OnPrimaryKeyTableIdChanged();
            }
        }
        private global::System.Int32 _PrimaryKeyTableId;
        partial void OnPrimaryKeyTableIdChanging(global::System.Int32 value);
        partial void OnPrimaryKeyTableIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PrimaryKeyTable
        {
            get
            {
                return _PrimaryKeyTable;
            }
            set
            {
                OnPrimaryKeyTableChanging(value);
                ReportPropertyChanging("PrimaryKeyTable");
                _PrimaryKeyTable = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PrimaryKeyTable");
                OnPrimaryKeyTableChanged();
            }
        }
        private global::System.String _PrimaryKeyTable;
        partial void OnPrimaryKeyTableChanging(global::System.String value);
        partial void OnPrimaryKeyTableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PrimaryKeyTableColumn
        {
            get
            {
                return _PrimaryKeyTableColumn;
            }
            set
            {
                OnPrimaryKeyTableColumnChanging(value);
                ReportPropertyChanging("PrimaryKeyTableColumn");
                _PrimaryKeyTableColumn = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PrimaryKeyTableColumn");
                OnPrimaryKeyTableColumnChanged();
            }
        }
        private global::System.String _PrimaryKeyTableColumn;
        partial void OnPrimaryKeyTableColumnChanging(global::System.String value);
        partial void OnPrimaryKeyTableColumnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ForeignKeyTable
        {
            get
            {
                return _ForeignKeyTable;
            }
            set
            {
                OnForeignKeyTableChanging(value);
                ReportPropertyChanging("ForeignKeyTable");
                _ForeignKeyTable = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ForeignKeyTable");
                OnForeignKeyTableChanged();
            }
        }
        private global::System.String _ForeignKeyTable;
        partial void OnForeignKeyTableChanging(global::System.String value);
        partial void OnForeignKeyTableChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ForeignKeyTableColumn
        {
            get
            {
                return _ForeignKeyTableColumn;
            }
            set
            {
                OnForeignKeyTableColumnChanging(value);
                ReportPropertyChanging("ForeignKeyTableColumn");
                _ForeignKeyTableColumn = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ForeignKeyTableColumn");
                OnForeignKeyTableColumnChanged();
            }
        }
        private global::System.String _ForeignKeyTableColumn;
        partial void OnForeignKeyTableColumnChanging(global::System.String value);
        partial void OnForeignKeyTableColumnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastChangeDate
        {
            get
            {
                return _LastChangeDate;
            }
            set
            {
                OnLastChangeDateChanging(value);
                ReportPropertyChanging("LastChangeDate");
                _LastChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastChangeDate");
                OnLastChangeDateChanged();
            }
        }
        private global::System.DateTime _LastChangeDate;
        partial void OnLastChangeDateChanging(global::System.DateTime value);
        partial void OnLastChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryAssociation_DynamicQueryTable", "DynamicQueryTable")]
        public DynamicQueryTable DynamicQueryTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryAssociation_DynamicQueryTable", "DynamicQueryTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryAssociation_DynamicQueryTable", "DynamicQueryTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DynamicQueryTable> DynamicQueryTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryAssociation_DynamicQueryTable", "DynamicQueryTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryAssociation_DynamicQueryTable", "DynamicQueryTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QbDynamicQueryModel", Name="DynamicQueryCalculatedColumn")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DynamicQueryCalculatedColumn : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DynamicQueryCalculatedColumn object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="tableId">Initial value of the TableId property.</param>
        /// <param name="sQL">Initial value of the SQL property.</param>
        /// <param name="type">Initial value of the Type property.</param>
        /// <param name="groupBy">Initial value of the GroupBy property.</param>
        /// <param name="lastChangeDate">Initial value of the LastChangeDate property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static DynamicQueryCalculatedColumn CreateDynamicQueryCalculatedColumn(global::System.Int32 id, global::System.String name, global::System.String description, global::System.Int32 tableId, global::System.String sQL, global::System.Int32 type, global::System.Boolean groupBy, global::System.DateTime lastChangeDate, global::System.Boolean active)
        {
            DynamicQueryCalculatedColumn dynamicQueryCalculatedColumn = new DynamicQueryCalculatedColumn();
            dynamicQueryCalculatedColumn.Id = id;
            dynamicQueryCalculatedColumn.Name = name;
            dynamicQueryCalculatedColumn.Description = description;
            dynamicQueryCalculatedColumn.TableId = tableId;
            dynamicQueryCalculatedColumn.SQL = sQL;
            dynamicQueryCalculatedColumn.Type = type;
            dynamicQueryCalculatedColumn.GroupBy = groupBy;
            dynamicQueryCalculatedColumn.LastChangeDate = lastChangeDate;
            dynamicQueryCalculatedColumn.Active = active;
            return dynamicQueryCalculatedColumn;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TableId
        {
            get
            {
                return _TableId;
            }
            set
            {
                OnTableIdChanging(value);
                ReportPropertyChanging("TableId");
                _TableId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TableId");
                OnTableIdChanged();
            }
        }
        private global::System.Int32 _TableId;
        partial void OnTableIdChanging(global::System.Int32 value);
        partial void OnTableIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SQL
        {
            get
            {
                return _SQL;
            }
            set
            {
                OnSQLChanging(value);
                ReportPropertyChanging("SQL");
                _SQL = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("SQL");
                OnSQLChanged();
            }
        }
        private global::System.String _SQL;
        partial void OnSQLChanging(global::System.String value);
        partial void OnSQLChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private global::System.Int32 _Type;
        partial void OnTypeChanging(global::System.Int32 value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubType
        {
            get
            {
                return _SubType;
            }
            set
            {
                OnSubTypeChanging(value);
                ReportPropertyChanging("SubType");
                _SubType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubType");
                OnSubTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _SubType;
        partial void OnSubTypeChanging(Nullable<global::System.Int32> value);
        partial void OnSubTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean GroupBy
        {
            get
            {
                return _GroupBy;
            }
            set
            {
                OnGroupByChanging(value);
                ReportPropertyChanging("GroupBy");
                _GroupBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupBy");
                OnGroupByChanged();
            }
        }
        private global::System.Boolean _GroupBy;
        partial void OnGroupByChanging(global::System.Boolean value);
        partial void OnGroupByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastChangeDate
        {
            get
            {
                return _LastChangeDate;
            }
            set
            {
                OnLastChangeDateChanging(value);
                ReportPropertyChanging("LastChangeDate");
                _LastChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastChangeDate");
                OnLastChangeDateChanged();
            }
        }
        private global::System.DateTime _LastChangeDate;
        partial void OnLastChangeDateChanging(global::System.DateTime value);
        partial void OnLastChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryCalculatedColumn_DynamicQueryTable", "DynamicQueryTable")]
        public DynamicQueryTable DynamicQueryTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumn_DynamicQueryTable", "DynamicQueryTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumn_DynamicQueryTable", "DynamicQueryTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DynamicQueryTable> DynamicQueryTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumn_DynamicQueryTable", "DynamicQueryTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumn_DynamicQueryTable", "DynamicQueryTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryCalculatedColumn_DynamicQueryTableSubType", "DynamicQueryTableSubType")]
        public DynamicQueryTableSubType DynamicQueryTableSubType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTableSubType>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumn_DynamicQueryTableSubType", "DynamicQueryTableSubType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTableSubType>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumn_DynamicQueryTableSubType", "DynamicQueryTableSubType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DynamicQueryTableSubType> DynamicQueryTableSubTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTableSubType>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumn_DynamicQueryTableSubType", "DynamicQueryTableSubType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DynamicQueryTableSubType>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumn_DynamicQueryTableSubType", "DynamicQueryTableSubType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryCalculatedColumn_DynamicQueryTableType", "DynamicQueryTableType")]
        public DynamicQueryTableType DynamicQueryTableType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTableType>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumn_DynamicQueryTableType", "DynamicQueryTableType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTableType>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumn_DynamicQueryTableType", "DynamicQueryTableType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DynamicQueryTableType> DynamicQueryTableTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTableType>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumn_DynamicQueryTableType", "DynamicQueryTableType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DynamicQueryTableType>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumn_DynamicQueryTableType", "DynamicQueryTableType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryCalculatedColumnTable_DynamicQueryCalculatedColumn", "DynamicQueryCalculatedColumnTable")]
        public EntityCollection<DynamicQueryCalculatedColumnTable> DynamicQueryCalculatedColumnTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DynamicQueryCalculatedColumnTable>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumnTable_DynamicQueryCalculatedColumn", "DynamicQueryCalculatedColumnTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DynamicQueryCalculatedColumnTable>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumnTable_DynamicQueryCalculatedColumn", "DynamicQueryCalculatedColumnTable", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QbDynamicQueryModel", Name="DynamicQueryCalculatedColumnTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DynamicQueryCalculatedColumnTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DynamicQueryCalculatedColumnTable object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="calculatedColumnId">Initial value of the CalculatedColumnId property.</param>
        /// <param name="tableId">Initial value of the TableId property.</param>
        public static DynamicQueryCalculatedColumnTable CreateDynamicQueryCalculatedColumnTable(global::System.Int32 id, global::System.Int32 calculatedColumnId, global::System.Int32 tableId)
        {
            DynamicQueryCalculatedColumnTable dynamicQueryCalculatedColumnTable = new DynamicQueryCalculatedColumnTable();
            dynamicQueryCalculatedColumnTable.Id = id;
            dynamicQueryCalculatedColumnTable.CalculatedColumnId = calculatedColumnId;
            dynamicQueryCalculatedColumnTable.TableId = tableId;
            return dynamicQueryCalculatedColumnTable;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CalculatedColumnId
        {
            get
            {
                return _CalculatedColumnId;
            }
            set
            {
                OnCalculatedColumnIdChanging(value);
                ReportPropertyChanging("CalculatedColumnId");
                _CalculatedColumnId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CalculatedColumnId");
                OnCalculatedColumnIdChanged();
            }
        }
        private global::System.Int32 _CalculatedColumnId;
        partial void OnCalculatedColumnIdChanging(global::System.Int32 value);
        partial void OnCalculatedColumnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TableId
        {
            get
            {
                return _TableId;
            }
            set
            {
                OnTableIdChanging(value);
                ReportPropertyChanging("TableId");
                _TableId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TableId");
                OnTableIdChanged();
            }
        }
        private global::System.Int32 _TableId;
        partial void OnTableIdChanging(global::System.Int32 value);
        partial void OnTableIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryCalculatedColumnTable_DynamicQueryTable", "DynamicQueryTable")]
        public DynamicQueryTable DynamicQueryTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumnTable_DynamicQueryTable", "DynamicQueryTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumnTable_DynamicQueryTable", "DynamicQueryTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DynamicQueryTable> DynamicQueryTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumnTable_DynamicQueryTable", "DynamicQueryTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumnTable_DynamicQueryTable", "DynamicQueryTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryCalculatedColumnTable_DynamicQueryCalculatedColumn", "DynamicQueryCalculatedColumn")]
        public DynamicQueryCalculatedColumn DynamicQueryCalculatedColumn
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryCalculatedColumn>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumnTable_DynamicQueryCalculatedColumn", "DynamicQueryCalculatedColumn").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryCalculatedColumn>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumnTable_DynamicQueryCalculatedColumn", "DynamicQueryCalculatedColumn").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DynamicQueryCalculatedColumn> DynamicQueryCalculatedColumnReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryCalculatedColumn>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumnTable_DynamicQueryCalculatedColumn", "DynamicQueryCalculatedColumn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DynamicQueryCalculatedColumn>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumnTable_DynamicQueryCalculatedColumn", "DynamicQueryCalculatedColumn", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QbDynamicQueryModel", Name="DynamicQueryColumn")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DynamicQueryColumn : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DynamicQueryColumn object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dynamicQueryId">Initial value of the DynamicQueryId property.</param>
        /// <param name="tableId">Initial value of the TableId property.</param>
        /// <param name="tableName">Initial value of the TableName property.</param>
        /// <param name="columnId">Initial value of the ColumnId property.</param>
        /// <param name="columnName">Initial value of the ColumnName property.</param>
        /// <param name="calculated">Initial value of the Calculated property.</param>
        /// <param name="isSelected">Initial value of the IsSelected property.</param>
        /// <param name="isWhere">Initial value of the IsWhere property.</param>
        /// <param name="isOrderBy">Initial value of the IsOrderBy property.</param>
        /// <param name="lastChangeDate">Initial value of the LastChangeDate property.</param>
        public static DynamicQueryColumn CreateDynamicQueryColumn(global::System.Int32 id, global::System.Int32 dynamicQueryId, global::System.Int32 tableId, global::System.String tableName, global::System.Int32 columnId, global::System.String columnName, global::System.Boolean calculated, global::System.Boolean isSelected, global::System.Boolean isWhere, global::System.Boolean isOrderBy, global::System.DateTime lastChangeDate)
        {
            DynamicQueryColumn dynamicQueryColumn = new DynamicQueryColumn();
            dynamicQueryColumn.Id = id;
            dynamicQueryColumn.DynamicQueryId = dynamicQueryId;
            dynamicQueryColumn.TableId = tableId;
            dynamicQueryColumn.TableName = tableName;
            dynamicQueryColumn.ColumnId = columnId;
            dynamicQueryColumn.ColumnName = columnName;
            dynamicQueryColumn.Calculated = calculated;
            dynamicQueryColumn.IsSelected = isSelected;
            dynamicQueryColumn.IsWhere = isWhere;
            dynamicQueryColumn.IsOrderBy = isOrderBy;
            dynamicQueryColumn.LastChangeDate = lastChangeDate;
            return dynamicQueryColumn;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DynamicQueryId
        {
            get
            {
                return _DynamicQueryId;
            }
            set
            {
                OnDynamicQueryIdChanging(value);
                ReportPropertyChanging("DynamicQueryId");
                _DynamicQueryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DynamicQueryId");
                OnDynamicQueryIdChanged();
            }
        }
        private global::System.Int32 _DynamicQueryId;
        partial void OnDynamicQueryIdChanging(global::System.Int32 value);
        partial void OnDynamicQueryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TableId
        {
            get
            {
                return _TableId;
            }
            set
            {
                OnTableIdChanging(value);
                ReportPropertyChanging("TableId");
                _TableId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TableId");
                OnTableIdChanged();
            }
        }
        private global::System.Int32 _TableId;
        partial void OnTableIdChanging(global::System.Int32 value);
        partial void OnTableIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TableName
        {
            get
            {
                return _TableName;
            }
            set
            {
                OnTableNameChanging(value);
                ReportPropertyChanging("TableName");
                _TableName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TableName");
                OnTableNameChanged();
            }
        }
        private global::System.String _TableName;
        partial void OnTableNameChanging(global::System.String value);
        partial void OnTableNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ColumnId
        {
            get
            {
                return _ColumnId;
            }
            set
            {
                OnColumnIdChanging(value);
                ReportPropertyChanging("ColumnId");
                _ColumnId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ColumnId");
                OnColumnIdChanged();
            }
        }
        private global::System.Int32 _ColumnId;
        partial void OnColumnIdChanging(global::System.Int32 value);
        partial void OnColumnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ColumnName
        {
            get
            {
                return _ColumnName;
            }
            set
            {
                OnColumnNameChanging(value);
                ReportPropertyChanging("ColumnName");
                _ColumnName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ColumnName");
                OnColumnNameChanged();
            }
        }
        private global::System.String _ColumnName;
        partial void OnColumnNameChanging(global::System.String value);
        partial void OnColumnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Calculated
        {
            get
            {
                return _Calculated;
            }
            set
            {
                OnCalculatedChanging(value);
                ReportPropertyChanging("Calculated");
                _Calculated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Calculated");
                OnCalculatedChanged();
            }
        }
        private global::System.Boolean _Calculated;
        partial void OnCalculatedChanging(global::System.Boolean value);
        partial void OnCalculatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsSelected
        {
            get
            {
                return _IsSelected;
            }
            set
            {
                OnIsSelectedChanging(value);
                ReportPropertyChanging("IsSelected");
                _IsSelected = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsSelected");
                OnIsSelectedChanged();
            }
        }
        private global::System.Boolean _IsSelected;
        partial void OnIsSelectedChanging(global::System.Boolean value);
        partial void OnIsSelectedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsWhere
        {
            get
            {
                return _IsWhere;
            }
            set
            {
                OnIsWhereChanging(value);
                ReportPropertyChanging("IsWhere");
                _IsWhere = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsWhere");
                OnIsWhereChanged();
            }
        }
        private global::System.Boolean _IsWhere;
        partial void OnIsWhereChanging(global::System.Boolean value);
        partial void OnIsWhereChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Operator
        {
            get
            {
                return _Operator;
            }
            set
            {
                OnOperatorChanging(value);
                ReportPropertyChanging("Operator");
                _Operator = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Operator");
                OnOperatorChanged();
            }
        }
        private global::System.String _Operator;
        partial void OnOperatorChanging(global::System.String value);
        partial void OnOperatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> GroupLevel
        {
            get
            {
                return _GroupLevel;
            }
            set
            {
                OnGroupLevelChanging(value);
                ReportPropertyChanging("GroupLevel");
                _GroupLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("GroupLevel");
                OnGroupLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _GroupLevel;
        partial void OnGroupLevelChanging(Nullable<global::System.Int32> value);
        partial void OnGroupLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String GroupOperator
        {
            get
            {
                return _GroupOperator;
            }
            set
            {
                OnGroupOperatorChanging(value);
                ReportPropertyChanging("GroupOperator");
                _GroupOperator = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("GroupOperator");
                OnGroupOperatorChanged();
            }
        }
        private global::System.String _GroupOperator;
        partial void OnGroupOperatorChanging(global::System.String value);
        partial void OnGroupOperatorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsOrderBy
        {
            get
            {
                return _IsOrderBy;
            }
            set
            {
                OnIsOrderByChanging(value);
                ReportPropertyChanging("IsOrderBy");
                _IsOrderBy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOrderBy");
                OnIsOrderByChanged();
            }
        }
        private global::System.Boolean _IsOrderBy;
        partial void OnIsOrderByChanging(global::System.Boolean value);
        partial void OnIsOrderByChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Direction
        {
            get
            {
                return _Direction;
            }
            set
            {
                OnDirectionChanging(value);
                ReportPropertyChanging("Direction");
                _Direction = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Direction");
                OnDirectionChanged();
            }
        }
        private global::System.String _Direction;
        partial void OnDirectionChanging(global::System.String value);
        partial void OnDirectionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Position
        {
            get
            {
                return _Position;
            }
            set
            {
                OnPositionChanging(value);
                ReportPropertyChanging("Position");
                _Position = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Position");
                OnPositionChanged();
            }
        }
        private Nullable<global::System.Int32> _Position;
        partial void OnPositionChanging(Nullable<global::System.Int32> value);
        partial void OnPositionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastChangeDate
        {
            get
            {
                return _LastChangeDate;
            }
            set
            {
                OnLastChangeDateChanging(value);
                ReportPropertyChanging("LastChangeDate");
                _LastChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastChangeDate");
                OnLastChangeDateChanged();
            }
        }
        private global::System.DateTime _LastChangeDate;
        partial void OnLastChangeDateChanging(global::System.DateTime value);
        partial void OnLastChangeDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryColumn_DynamicQueryQuery", "DynamicQueryQuery")]
        public DynamicQueryQuery DynamicQueryQuery
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryQuery>("QbDynamicQueryModel.FK_DynamicQueryColumn_DynamicQueryQuery", "DynamicQueryQuery").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryQuery>("QbDynamicQueryModel.FK_DynamicQueryColumn_DynamicQueryQuery", "DynamicQueryQuery").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DynamicQueryQuery> DynamicQueryQueryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryQuery>("QbDynamicQueryModel.FK_DynamicQueryColumn_DynamicQueryQuery", "DynamicQueryQuery");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DynamicQueryQuery>("QbDynamicQueryModel.FK_DynamicQueryColumn_DynamicQueryQuery", "DynamicQueryQuery", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryColumn_DynamicQueryTable", "DynamicQueryTable")]
        public DynamicQueryTable DynamicQueryTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryColumn_DynamicQueryTable", "DynamicQueryTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryColumn_DynamicQueryTable", "DynamicQueryTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DynamicQueryTable> DynamicQueryTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryColumn_DynamicQueryTable", "DynamicQueryTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryColumn_DynamicQueryTable", "DynamicQueryTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryColumn_DynamicQueryTableColumn", "DynamicQueryTableColumn")]
        public DynamicQueryTableColumn DynamicQueryTableColumn
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTableColumn>("QbDynamicQueryModel.FK_DynamicQueryColumn_DynamicQueryTableColumn", "DynamicQueryTableColumn").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTableColumn>("QbDynamicQueryModel.FK_DynamicQueryColumn_DynamicQueryTableColumn", "DynamicQueryTableColumn").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DynamicQueryTableColumn> DynamicQueryTableColumnReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTableColumn>("QbDynamicQueryModel.FK_DynamicQueryColumn_DynamicQueryTableColumn", "DynamicQueryTableColumn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DynamicQueryTableColumn>("QbDynamicQueryModel.FK_DynamicQueryColumn_DynamicQueryTableColumn", "DynamicQueryTableColumn", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QbDynamicQueryModel", Name="DynamicQueryQuery")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DynamicQueryQuery : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DynamicQueryQuery object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="lastChangeDate">Initial value of the LastChangeDate property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static DynamicQueryQuery CreateDynamicQueryQuery(global::System.Int32 id, global::System.String name, global::System.String description, global::System.DateTime lastChangeDate, global::System.Boolean active)
        {
            DynamicQueryQuery dynamicQueryQuery = new DynamicQueryQuery();
            dynamicQueryQuery.Id = id;
            dynamicQueryQuery.Name = name;
            dynamicQueryQuery.Description = description;
            dynamicQueryQuery.LastChangeDate = lastChangeDate;
            dynamicQueryQuery.Active = active;
            return dynamicQueryQuery;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastChangeDate
        {
            get
            {
                return _LastChangeDate;
            }
            set
            {
                OnLastChangeDateChanging(value);
                ReportPropertyChanging("LastChangeDate");
                _LastChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastChangeDate");
                OnLastChangeDateChanged();
            }
        }
        private global::System.DateTime _LastChangeDate;
        partial void OnLastChangeDateChanging(global::System.DateTime value);
        partial void OnLastChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryColumn_DynamicQueryQuery", "DynamicQueryColumn")]
        public EntityCollection<DynamicQueryColumn> DynamicQueryColumn
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DynamicQueryColumn>("QbDynamicQueryModel.FK_DynamicQueryColumn_DynamicQueryQuery", "DynamicQueryColumn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DynamicQueryColumn>("QbDynamicQueryModel.FK_DynamicQueryColumn_DynamicQueryQuery", "DynamicQueryColumn", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QbDynamicQueryModel", Name="DynamicQueryTable")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DynamicQueryTable : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DynamicQueryTable object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="lastChangeDate">Initial value of the LastChangeDate property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static DynamicQueryTable CreateDynamicQueryTable(global::System.Int32 id, global::System.String name, global::System.DateTime lastChangeDate, global::System.Boolean active)
        {
            DynamicQueryTable dynamicQueryTable = new DynamicQueryTable();
            dynamicQueryTable.Id = id;
            dynamicQueryTable.Name = name;
            dynamicQueryTable.LastChangeDate = lastChangeDate;
            dynamicQueryTable.Active = active;
            return dynamicQueryTable;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastChangeDate
        {
            get
            {
                return _LastChangeDate;
            }
            set
            {
                OnLastChangeDateChanging(value);
                ReportPropertyChanging("LastChangeDate");
                _LastChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastChangeDate");
                OnLastChangeDateChanged();
            }
        }
        private global::System.DateTime _LastChangeDate;
        partial void OnLastChangeDateChanging(global::System.DateTime value);
        partial void OnLastChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryAssociation_DynamicQueryTable", "DynamicQueryAssociation")]
        public EntityCollection<DynamicQueryAssociation> DynamicQueryAssociation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DynamicQueryAssociation>("QbDynamicQueryModel.FK_DynamicQueryAssociation_DynamicQueryTable", "DynamicQueryAssociation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DynamicQueryAssociation>("QbDynamicQueryModel.FK_DynamicQueryAssociation_DynamicQueryTable", "DynamicQueryAssociation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryCalculatedColumnTable_DynamicQueryTable", "DynamicQueryCalculatedColumnTable")]
        public EntityCollection<DynamicQueryCalculatedColumnTable> DynamicQueryCalculatedColumnTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DynamicQueryCalculatedColumnTable>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumnTable_DynamicQueryTable", "DynamicQueryCalculatedColumnTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DynamicQueryCalculatedColumnTable>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumnTable_DynamicQueryTable", "DynamicQueryCalculatedColumnTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryColumn_DynamicQueryTable", "DynamicQueryColumn")]
        public EntityCollection<DynamicQueryColumn> DynamicQueryColumn
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DynamicQueryColumn>("QbDynamicQueryModel.FK_DynamicQueryColumn_DynamicQueryTable", "DynamicQueryColumn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DynamicQueryColumn>("QbDynamicQueryModel.FK_DynamicQueryColumn_DynamicQueryTable", "DynamicQueryColumn", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryCalculatedColumn_DynamicQueryTable", "DynamicQueryCalculatedColumn")]
        public EntityCollection<DynamicQueryCalculatedColumn> DynamicQueryCalculatedColumn
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DynamicQueryCalculatedColumn>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumn_DynamicQueryTable", "DynamicQueryCalculatedColumn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DynamicQueryCalculatedColumn>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumn_DynamicQueryTable", "DynamicQueryCalculatedColumn", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryTableColumn_DynamicQueryTable", "DynamicQueryTableColumn")]
        public EntityCollection<DynamicQueryTableColumn> DynamicQueryTableColumn
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DynamicQueryTableColumn>("QbDynamicQueryModel.FK_DynamicQueryTableColumn_DynamicQueryTable", "DynamicQueryTableColumn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DynamicQueryTableColumn>("QbDynamicQueryModel.FK_DynamicQueryTableColumn_DynamicQueryTable", "DynamicQueryTableColumn", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QbDynamicQueryModel", Name="DynamicQueryTableColumn")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DynamicQueryTableColumn : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DynamicQueryTableColumn object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="tableId">Initial value of the TableId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="lastChangeDate">Initial value of the LastChangeDate property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static DynamicQueryTableColumn CreateDynamicQueryTableColumn(global::System.Int32 id, global::System.Int32 tableId, global::System.String name, global::System.String description, global::System.DateTime lastChangeDate, global::System.Boolean active)
        {
            DynamicQueryTableColumn dynamicQueryTableColumn = new DynamicQueryTableColumn();
            dynamicQueryTableColumn.Id = id;
            dynamicQueryTableColumn.TableId = tableId;
            dynamicQueryTableColumn.Name = name;
            dynamicQueryTableColumn.Description = description;
            dynamicQueryTableColumn.LastChangeDate = lastChangeDate;
            dynamicQueryTableColumn.Active = active;
            return dynamicQueryTableColumn;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TableId
        {
            get
            {
                return _TableId;
            }
            set
            {
                OnTableIdChanging(value);
                ReportPropertyChanging("TableId");
                _TableId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TableId");
                OnTableIdChanged();
            }
        }
        private global::System.Int32 _TableId;
        partial void OnTableIdChanging(global::System.Int32 value);
        partial void OnTableIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColumnType
        {
            get
            {
                return _ColumnType;
            }
            set
            {
                OnColumnTypeChanging(value);
                ReportPropertyChanging("ColumnType");
                _ColumnType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColumnType");
                OnColumnTypeChanged();
            }
        }
        private global::System.String _ColumnType;
        partial void OnColumnTypeChanging(global::System.String value);
        partial void OnColumnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Length
        {
            get
            {
                return _Length;
            }
            set
            {
                OnLengthChanging(value);
                ReportPropertyChanging("Length");
                _Length = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Length");
                OnLengthChanged();
            }
        }
        private Nullable<global::System.Int32> _Length;
        partial void OnLengthChanging(Nullable<global::System.Int32> value);
        partial void OnLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Precision
        {
            get
            {
                return _Precision;
            }
            set
            {
                OnPrecisionChanging(value);
                ReportPropertyChanging("Precision");
                _Precision = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Precision");
                OnPrecisionChanged();
            }
        }
        private Nullable<global::System.Int32> _Precision;
        partial void OnPrecisionChanging(Nullable<global::System.Int32> value);
        partial void OnPrecisionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastChangeDate
        {
            get
            {
                return _LastChangeDate;
            }
            set
            {
                OnLastChangeDateChanging(value);
                ReportPropertyChanging("LastChangeDate");
                _LastChangeDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastChangeDate");
                OnLastChangeDateChanged();
            }
        }
        private global::System.DateTime _LastChangeDate;
        partial void OnLastChangeDateChanging(global::System.DateTime value);
        partial void OnLastChangeDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Type
        {
            get
            {
                return _Type;
            }
            set
            {
                OnTypeChanging(value);
                ReportPropertyChanging("Type");
                _Type = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Type");
                OnTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _Type;
        partial void OnTypeChanging(Nullable<global::System.Int32> value);
        partial void OnTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SubType
        {
            get
            {
                return _SubType;
            }
            set
            {
                OnSubTypeChanging(value);
                ReportPropertyChanging("SubType");
                _SubType = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SubType");
                OnSubTypeChanged();
            }
        }
        private Nullable<global::System.Int32> _SubType;
        partial void OnSubTypeChanging(Nullable<global::System.Int32> value);
        partial void OnSubTypeChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryColumn_DynamicQueryTableColumn", "DynamicQueryColumn")]
        public EntityCollection<DynamicQueryColumn> DynamicQueryColumn
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DynamicQueryColumn>("QbDynamicQueryModel.FK_DynamicQueryColumn_DynamicQueryTableColumn", "DynamicQueryColumn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DynamicQueryColumn>("QbDynamicQueryModel.FK_DynamicQueryColumn_DynamicQueryTableColumn", "DynamicQueryColumn", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryTableColumn_DynamicQueryTable", "DynamicQueryTable")]
        public DynamicQueryTable DynamicQueryTable
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryTableColumn_DynamicQueryTable", "DynamicQueryTable").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryTableColumn_DynamicQueryTable", "DynamicQueryTable").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DynamicQueryTable> DynamicQueryTableReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryTableColumn_DynamicQueryTable", "DynamicQueryTable");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DynamicQueryTable>("QbDynamicQueryModel.FK_DynamicQueryTableColumn_DynamicQueryTable", "DynamicQueryTable", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryTableColumn_DynamicQueryTableSubType", "DynamicQueryTableSubType")]
        public DynamicQueryTableSubType DynamicQueryTableSubType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTableSubType>("QbDynamicQueryModel.FK_DynamicQueryTableColumn_DynamicQueryTableSubType", "DynamicQueryTableSubType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTableSubType>("QbDynamicQueryModel.FK_DynamicQueryTableColumn_DynamicQueryTableSubType", "DynamicQueryTableSubType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DynamicQueryTableSubType> DynamicQueryTableSubTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTableSubType>("QbDynamicQueryModel.FK_DynamicQueryTableColumn_DynamicQueryTableSubType", "DynamicQueryTableSubType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DynamicQueryTableSubType>("QbDynamicQueryModel.FK_DynamicQueryTableColumn_DynamicQueryTableSubType", "DynamicQueryTableSubType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryTableColumn_DynamicQueryTableType", "DynamicQueryTableType")]
        public DynamicQueryTableType DynamicQueryTableType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTableType>("QbDynamicQueryModel.FK_DynamicQueryTableColumn_DynamicQueryTableType", "DynamicQueryTableType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTableType>("QbDynamicQueryModel.FK_DynamicQueryTableColumn_DynamicQueryTableType", "DynamicQueryTableType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DynamicQueryTableType> DynamicQueryTableTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTableType>("QbDynamicQueryModel.FK_DynamicQueryTableColumn_DynamicQueryTableType", "DynamicQueryTableType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DynamicQueryTableType>("QbDynamicQueryModel.FK_DynamicQueryTableColumn_DynamicQueryTableType", "DynamicQueryTableType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QbDynamicQueryModel", Name="DynamicQueryTableSubType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DynamicQueryTableSubType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DynamicQueryTableSubType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="typeId">Initial value of the TypeId property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static DynamicQueryTableSubType CreateDynamicQueryTableSubType(global::System.Int32 id, global::System.Int32 typeId, global::System.String name, global::System.Boolean active)
        {
            DynamicQueryTableSubType dynamicQueryTableSubType = new DynamicQueryTableSubType();
            dynamicQueryTableSubType.Id = id;
            dynamicQueryTableSubType.TypeId = typeId;
            dynamicQueryTableSubType.Name = name;
            dynamicQueryTableSubType.Active = active;
            return dynamicQueryTableSubType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TypeId
        {
            get
            {
                return _TypeId;
            }
            set
            {
                OnTypeIdChanging(value);
                ReportPropertyChanging("TypeId");
                _TypeId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TypeId");
                OnTypeIdChanged();
            }
        }
        private global::System.Int32 _TypeId;
        partial void OnTypeIdChanging(global::System.Int32 value);
        partial void OnTypeIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryTableSubType_DynamicQueryTableType", "DynamicQueryTableType")]
        public DynamicQueryTableType DynamicQueryTableType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTableType>("QbDynamicQueryModel.FK_DynamicQueryTableSubType_DynamicQueryTableType", "DynamicQueryTableType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTableType>("QbDynamicQueryModel.FK_DynamicQueryTableSubType_DynamicQueryTableType", "DynamicQueryTableType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<DynamicQueryTableType> DynamicQueryTableTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<DynamicQueryTableType>("QbDynamicQueryModel.FK_DynamicQueryTableSubType_DynamicQueryTableType", "DynamicQueryTableType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<DynamicQueryTableType>("QbDynamicQueryModel.FK_DynamicQueryTableSubType_DynamicQueryTableType", "DynamicQueryTableType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryCalculatedColumn_DynamicQueryTableSubType", "DynamicQueryCalculatedColumn")]
        public EntityCollection<DynamicQueryCalculatedColumn> DynamicQueryCalculatedColumn
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DynamicQueryCalculatedColumn>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumn_DynamicQueryTableSubType", "DynamicQueryCalculatedColumn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DynamicQueryCalculatedColumn>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumn_DynamicQueryTableSubType", "DynamicQueryCalculatedColumn", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryTableColumn_DynamicQueryTableSubType", "DynamicQueryTableColumn")]
        public EntityCollection<DynamicQueryTableColumn> DynamicQueryTableColumn
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DynamicQueryTableColumn>("QbDynamicQueryModel.FK_DynamicQueryTableColumn_DynamicQueryTableSubType", "DynamicQueryTableColumn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DynamicQueryTableColumn>("QbDynamicQueryModel.FK_DynamicQueryTableColumn_DynamicQueryTableSubType", "DynamicQueryTableColumn", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="QbDynamicQueryModel", Name="DynamicQueryTableType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class DynamicQueryTableType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DynamicQueryTableType object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        public static DynamicQueryTableType CreateDynamicQueryTableType(global::System.Int32 id, global::System.String name, global::System.Boolean active)
        {
            DynamicQueryTableType dynamicQueryTableType = new DynamicQueryTableType();
            dynamicQueryTableType.Id = id;
            dynamicQueryTableType.Name = name;
            dynamicQueryTableType.Active = active;
            return dynamicQueryTableType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryTableSubType_DynamicQueryTableType", "DynamicQueryTableSubType")]
        public EntityCollection<DynamicQueryTableSubType> DynamicQueryTableSubType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DynamicQueryTableSubType>("QbDynamicQueryModel.FK_DynamicQueryTableSubType_DynamicQueryTableType", "DynamicQueryTableSubType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DynamicQueryTableSubType>("QbDynamicQueryModel.FK_DynamicQueryTableSubType_DynamicQueryTableType", "DynamicQueryTableSubType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryCalculatedColumn_DynamicQueryTableType", "DynamicQueryCalculatedColumn")]
        public EntityCollection<DynamicQueryCalculatedColumn> DynamicQueryCalculatedColumn
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DynamicQueryCalculatedColumn>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumn_DynamicQueryTableType", "DynamicQueryCalculatedColumn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DynamicQueryCalculatedColumn>("QbDynamicQueryModel.FK_DynamicQueryCalculatedColumn_DynamicQueryTableType", "DynamicQueryCalculatedColumn", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("QbDynamicQueryModel", "FK_DynamicQueryTableColumn_DynamicQueryTableType", "DynamicQueryTableColumn")]
        public EntityCollection<DynamicQueryTableColumn> DynamicQueryTableColumn
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DynamicQueryTableColumn>("QbDynamicQueryModel.FK_DynamicQueryTableColumn_DynamicQueryTableType", "DynamicQueryTableColumn");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DynamicQueryTableColumn>("QbDynamicQueryModel.FK_DynamicQueryTableColumn_DynamicQueryTableType", "DynamicQueryTableColumn", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
